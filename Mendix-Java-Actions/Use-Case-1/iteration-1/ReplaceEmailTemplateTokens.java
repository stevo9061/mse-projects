// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package forgotpassword.actions;

import com.mendix.core.objectmanagement.member.MendixString;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.IMendixObjectMember;
import com.mendix.webui.CustomJavaAction;
import mxmodelreflection.TokenReplacer;
import java.util.Map;
import java.util.Map.Entry;

public class ReplaceEmailTemplateTokens extends CustomJavaAction<java.lang.Boolean>
{
	private final IMendixObject DataObject;
	/** @deprecated use email.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __email;
	private final email_connector.proxies.EmailMessage email;
	/** @deprecated use com.mendix.utils.ListUtils.map(TokenList, com.mendix.systemwideinterfaces.core.IEntityProxy::getMendixObject) instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final java.util.List<IMendixObject> __TokenList;
	private final java.util.List<mxmodelreflection.proxies.Token> TokenList;

	public ReplaceEmailTemplateTokens(
		IContext context,
		IMendixObject _dataObject,
		IMendixObject _email,
		java.util.List<IMendixObject> _tokenList
	)
	{
		super(context);
		this.DataObject = _dataObject;
		this.__email = _email;
		this.email = _email == null ? null : email_connector.proxies.EmailMessage.initialize(getContext(), _email);
		this.__TokenList = _tokenList;
		this.TokenList = java.util.Optional.ofNullable(_tokenList)
			.orElse(java.util.Collections.emptyList())
			.stream()
			.map(tokenListElement -> mxmodelreflection.proxies.Token.initialize(getContext(), tokenListElement))
			.collect(java.util.stream.Collectors.toList());
	}

	@java.lang.Override
	// CC: 1 (base value) + 1 (for) + 1 (if)
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		
		Map<String, ? extends IMendixObjectMember<?>> members = this.email.getMendixObject().getMembers(getContext());
		for( Entry<String, ? extends IMendixObjectMember<?>> entry : members.entrySet() ) {
			
			IMendixObjectMember<?> m = entry.getValue();
			if( m instanceof MendixString && m.hasWriteAccess(this.getContext())) {
				MendixString member = (MendixString) m;
				member.setValue( this.getContext(), TokenReplacer.replaceTokens(this.getContext(), member.getValue(this.getContext()), this.__TokenList, this.DataObject));
			}
		}

		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ReplaceEmailTemplateTokens";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
	// Total CC of the class: 3

}
